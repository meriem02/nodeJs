<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vertical Menu</title>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: space-between;
        }

        nav {
            width: 200px;
            background-color: #2c3e50;
            padding: 10px;
            position: fixed;
            height: 100%;
            overflow: auto;
            display: flex;
            flex-direction: column;
            align-items: left;
        }

        nav a {
            display: block;
            color: #ecf0f1;
            /* Changement de la couleur du texte */
            padding: 14px 8px;
            text-decoration: none;
            transition: background-color 0.3s ease;
            /* Transition lors du survol */
        }

        nav a:hover {
            background-color: #3498db;
            /* Changement de la couleur de fond au survol */
        }

        section {
            margin-left: 220px;
            padding: 16px;
            flex-grow: 1;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        table,
        th,
        td {
            border: 1px solid #ddd;
        }

        th,
        td {
            padding: 15px;
            text-align: left;
        }

        h2 {
            color: #2c3e50;
            /* Changement de la couleur du titre */
        }
    </style>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <nav>
        <a href="#home">Tous les utilisateurs</a>
        <a href="#" id="logout">Déconnexion</a>
    </nav>
    <section>
        <h2>Gestion des utilisateurs</h2>
        <table>
            <thead>
                <tr>
                    <th>Nom Utilisateur</th>
                    <th>Email</th>
                    <th>Mot de Passe</th>
                    <th>Role</th>
                    <th>Action</th> 
                </tr>
            </thead>
            <tbody id="userDataBody"></tbody>
        </table>
    </section>
    <script>
        const socket = io();
        socket.on('aff', function (data) {
            console.log('Data received:', data);
            const tbody = document.getElementById('userDataBody');
            tbody.innerHTML = '';  // Effacez le contenu actuel du tbody
            if (data !== null && Array.isArray(data)) {
           data.forEach(user => {
            const row = tbody.insertRow();
            const cell1 = row.insertCell(0);
            const cell2 = row.insertCell(1);
            const cell3 = row.insertCell(2);
            const cell4 = row.insertCell(3);
            const cell5 = row.insertCell(4);

            cell1.textContent = user.username;
            cell2.textContent = user.email;
            cell3.textContent = user.password;
            cell4.textContent = user.role;

             const deleteButton = createDeleteButton(user._id);
                    cell5.appendChild(deleteButton);
        });
            } else {
                console.error('Invalid data format:', data);
            }
        });

          socket.on('deleteUser', function (result) {
            if (result.success) {
                console.log(result.message);
                // Reload data after successful deletion
                socket.emit('aff');
            } else {
                console.error(result.message);
            }
        });

        document.getElementById('logout').addEventListener('click', function () {
            socket.emit('logout');
            console.log('Logout event emitted');
            alert('Souhaitez-vous vous déconnecter ?');
            window.location.href = '/user/login';
        });
        socket.emit('aff');

        function createDeleteButton(userId) {
            const button = document.createElement('button');
            button.textContent = 'Supprimer';
            button.style.backgroundColor = 'red';
            button.style.color = 'white';
            button.style.border = 'none'; // Remove border
            button.style.padding = '5px 10px'; // Adjust padding for a smaller button
            button.style.margin = '0'; // Remove margin
            button.style.cursor = 'pointer'; // Add a pointer cursor
            button.addEventListener('click', function () {
            console.log('Delete button clicked for user ID:', userId);
                // Emit the delete request to the server
            socket.emit('deleteUser', { userId });
            });
            return button;
            }

    </script>
</body>
</html>